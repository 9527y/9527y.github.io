<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>springboot :: Tag :: 逆天改命</title><link>https://linkall.pub/tags/springboot/index.html</link><description/><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 27 Jul 2020 22:21:48 +0000</lastBuildDate><atom:link href="https://linkall.pub/tags/springboot/index.xml" rel="self" type="application/rss+xml"/><item><title>zuul 自定义负载策略</title><link>https://linkall.pub/zuul-ribbon-irule/index.html</link><pubDate>Mon, 27 Jul 2020 22:21:48 +0000</pubDate><guid>https://linkall.pub/zuul-ribbon-irule/index.html</guid><description>定制IRule 使前后端开发可定制匹配, 学习并配置了网关的负载策略，zuul 底层使用的是 ribbon 的负载组件, ribbon 可以从 eureka 获取服务列表, 所以想要自定义负载, 得从 ribbon 入手, 查看并搜索 loadBalance 相关的类, 可以看到 AbstractLoadBalancerRule 这个类, 查看类树, 可以看到顶级接口为 IRule
/** * 决定最终的服务提供者 */ public Server choose(Object key); /** * 设置负载均衡器 */ public void setLoadBalancer(ILoadBalancer lb); /** * 拿到负载均衡器 */ public ILoadBalancer getLoadBalancer(); debug 分析, 得知 ribbon 默认的负载策略为: ZoneAvoidanceRule, 这个类继承自 AbstractLoadBalancerRule, AbstractLoadBalancerRule中存在 ILoadBalancer 属性, 可以获取负载器, 负载器中又可以获取服务列表等信息
所以我们只需要继承ZoneAvoidanceRule, 重写 choose 方法即可
ribbon 默认的负载器为: DynamicServerListLoadBalancer, 其中包括节点健康状态服务支持, 节点状态的更新(ServerListUpdater), 负载策略, 可用区域的分析, 可以从此类详细了解 ribbon 的运行机制</description></item><item><title>Springboot 指定profile配置文件</title><link>https://linkall.pub/springboot-profile-config/index.html</link><pubDate>Mon, 01 Jun 2020 21:48:38 +0000</pubDate><guid>https://linkall.pub/springboot-profile-config/index.html</guid><description>Maven启动指定Profile通过-P，如mvn spring-boot:run -Ptest，但这是Maven的Profile。
如果要指定spring-boot的spring.profiles.active，则必须使用mvn spring-boot:run -Drun.profiles=test
如果使用命令行直接运行jar文件，则使用java -jar -Dspring.profiles.active=test demo-0.0.1-SNAPSHOT.jar
注意：-Dspring.profiles.active=test的位置。
如果使用开发工具，运行Application.java文件启动，则增加参数–spring.profiles.active=test</description></item><item><title>zuul 网关上传文件大小配置</title><link>https://linkall.pub/zuul-upload-config/index.html</link><pubDate>Tue, 26 May 2020 18:20:18 +0000</pubDate><guid>https://linkall.pub/zuul-upload-config/index.html</guid><description>关于版本先看pom配置 &lt;parent> &lt;groupId>org.springframework.boot&lt;/groupId> &lt;artifactId>spring-boot-starter-parent&lt;/artifactId> &lt;version>2.1.2.RELEASE&lt;/version> &lt;relativePath/> &lt;/parent> &lt;properties> &lt;java.version>1.8&lt;/java.version> &lt;spring-cloud.version>Greenwich.RELEASE&lt;/spring-cloud.version> &lt;/properties> ------- &lt;dependency> &lt;groupId>org.springframework.cloud&lt;/groupId> &lt;artifactId>spring-cloud-starter-netflix-zuul&lt;/artifactId> &lt;/dependency>文件大小设置 spring: application: name: dragon-zuul servlet:	# 此版本的节点为servlet，不是http 注意一下 multipart: enabled: true # 启用上传处理，默认是true file-size-threshold: 1MB # 当上传文件达到1MB的时候进行磁盘写入 max-request-size: 10MB	# 设置最大的请求文件的大小 max-file-size: 10MB	# 设置单个文件的最大长度</description></item></channel></rss>