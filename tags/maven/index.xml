<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>maven :: Tag :: 逆天改命</title><link>https://linkall.pub/tags/maven/index.html</link><description/><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 02 Jun 2020 14:57:55 +0000</lastBuildDate><atom:link href="https://linkall.pub/tags/maven/index.xml" rel="self" type="application/rss+xml"/><item><title>Apache Maven Source Plugin-Maven打包源码到私服</title><link>https://linkall.pub/apache-maven-source-plugin-usage/index.html</link><pubDate>Tue, 02 Jun 2020 14:57:55 +0000</pubDate><guid>https://linkall.pub/apache-maven-source-plugin-usage/index.html</guid><description>使用插件Apache Maven Source Plugin 官网说明：https://maven.apache.org/plugins/maven-source-plugin/index.html
Goals Overview source:jar 是默认的。 The Source Plugin has five goals:
source:aggregate aggregrates sources for all modules in an aggregator project. source:jar is used to bundle the main sources of the project into a jar archive. source:test-jar on the other hand, is used to bundle the test sources of the project into a jar archive. source:jar-no-fork is similar to jar but does not fork the build lifecycle.</description></item><item><title>MAVEN发布项目到私服，镜像</title><link>https://linkall.pub/maven-respoistory/index.html</link><pubDate>Sun, 31 May 2020 17:51:24 +0000</pubDate><guid>https://linkall.pub/maven-respoistory/index.html</guid><description>snapshot和release的区别 snapshot快照库，开发过程中随时发布，无需更改版本号，适用不稳定的开发阶段 release，版本稳定后，可以发布到此库。 快照版本后缀-SNAPSHOT，发布到不同的库完全是依靠版本号确定，程序自动判断。 快照版本示例
&lt;groupId>com.alexdev&lt;/groupId> &lt;artifactId>mm&lt;/artifactId> &lt;version>0.1-SNAPSHOT&lt;/version> &lt;packaging>jar&lt;/packaging>发布到私服 一般私服使用Nexus SSO搭建。在官网下载安装包安装即可（ https://www.sonatype.com/nexus-repository-oss ）。目前版本：Nexus Repository Manager OSS 3.x （2019-01-08） 默认密码：admin/admin123 安装完后设置maven的setting文件：
&lt;server> &lt;id>releases&lt;/id> &lt;username>admin&lt;/username> &lt;password>admin123&lt;/password> &lt;/server> &lt;server> &lt;id>snapshots&lt;/id> &lt;username>admin&lt;/username> &lt;password>admin123&lt;/password> &lt;/server>在如上配置设置了两个账户密码，这个账户密码是nexus的账户密码，如需新建，请与之对应。 之后设置项目的pom文件，注意id和settting.xml文件中的id需相对应。代表发布到不同的代码库中的不同账户和密码。对于url地址，不同的版本可能不同。
&lt;!-- 项目发布管理 --> &lt;distributionManagement> &lt;repository> &lt;id>releases&lt;/id> &lt;name>User Project Release&lt;/name> &lt;url>http://192.168.1.53:8081/repository/maven-releases/&lt;/url> &lt;/repository> &lt;snapshotRepository> &lt;id>snapshots&lt;/id> &lt;name>User Project SNAPSHOTS&lt;/name> &lt;url>http://192.168.1.53:8081/repository/maven-snapshots/&lt;/url> &lt;/snapshotRepository> &lt;/distributionManagement> 发布到私服的命令：
mvn clean deploy -X -Dmaven.test.skip=true如果看到BUILD SUCCESS字样，既可在仓库里查看相应的包。
Tips 如果出现400，需要注意项目下的pom.xml文件和maven使用的setting.xml文件的配置是否一致。 如果出现401，需要检查maven使用的setting.xml中的帐号和密码是否正确，相应的repository是否为“Allow Redeploy”。 镜像mirror 镜像的目的是为了解决访问速度问题，个人开发可以设置国内镜像，例如阿里云提供的的，在setting.xml文件中添加
&lt;mirror> &lt;id>alimaven&lt;/id> &lt;name>aliyun maven&lt;/name> &lt;url>http://maven.aliyun.com/nexus/content/groups/public/&lt;/url> &lt;mirrorOf>central&lt;/mirrorOf> &lt;/mirror>如果是团队开发，需要设置上文中所安装的私服release镜像。具体url查看如上文图中所示。</description></item><item><title>Maven查看当前生效配置、pom、环境变量等命令（mvn help用法）</title><link>https://linkall.pub/maven-help-usage/index.html</link><pubDate>Tue, 26 May 2020 18:21:06 +0000</pubDate><guid>https://linkall.pub/maven-help-usage/index.html</guid><description> 检查当前Maven环境启用的文件 mvn help:effective-settings 查看当前项目的pom配置，包括所有依赖 mvn help:effective-pom 查看当前处于激活状态的profile mvn help:active-profiles 指定使用某个配置文件执行Maven命令 mvn -s &lt;filepath> &lt;goal> mvn -s ~/.m2/settings_local.xml clean deploy 查看当前项目的所有mvn配置 mvn -X 打印所有可用的环境变量和Java系统属性 mvn help:system</description></item></channel></rss>